{"version":3,"file":"index.es.mjs","sources":["lib/font-weight-names.js","index.js"],"sourcesContent":["export default {\n\t'thin': 100,\n\t'extra-light': 200,\n\t'extralight': 200,\n\t'ultra-light': 200,\n\t'ultralight': 200,\n\t'light': 300,\n\t'book': 400,\n\t'normal': 400,\n\t'regular': 400,\n\t'roman': 400,\n\t'medium': 500,\n\t'semi-bold': 600,\n\t'semibold': 600,\n\t'demi-bold': 600,\n\t'demibold': 600,\n\t'bold': 700,\n\t'extra-bold': 800,\n\t'extrabold': 800,\n\t'ultra-bold': 800,\n\t'ultrabold': 800,\n\t'black': 900,\n\t'heavy': 900\n};\n","import postcss from 'postcss';\nimport fontWeightNames from './lib/font-weight-names';\n\nexport default postcss.plugin('postcss-font-weights', opts => {\n\t// get the dashed prefix\n\tconst prefix = 'prefix' in Object(opts) ? `-${opts.prefix}-` : '';\n\n\t// get the (conditionally prefixed) property pattern\n\tconst propertyRegExp = new RegExp(`^${prefix}(font(-weight)?)$`);\n\n\t// get the custom weights map\n\tconst fontWeightMap = Object.assign({}, fontWeightNames, Object(opts).weights);\n\n\t// get the font-weight pattern\n\tconst fontWeightRegExp = new RegExp(`(^|\\\\s)(${Object.keys(fontWeightMap).join('|')})(\\\\s|$)`);\n\n\treturn root => {\n\t\t// walk each matching declaration\n\t\troot.walkDecls(propertyRegExp, decl => {\n\t\t\t// unprefixed property\n\t\t\tconst [, property] = decl.prop.match(propertyRegExp);\n\n\t\t\t// conditionally remove the prefix from the property\n\t\t\tif (prefix) {\n\t\t\t\tdecl.prop = property;\n\t\t\t}\n\n\t\t\t// conditionally replace the font weight in the value\n\t\t\tdecl.value = decl.value.replace(\n\t\t\t\tfontWeightRegExp,\n\t\t\t\t($0, beforeSpace, value, afterSpace) => `${beforeSpace}${fontWeightMap[value]}${afterSpace}` // eslint-disable-line max-params\n\t\t\t);\n\t\t});\n\t};\n});\n"],"names":["postcss","plugin","opts","prefix","Object","propertyRegExp","RegExp","fontWeightMap","assign","fontWeightNames","weights","fontWeightRegExp","keys","join","root","walkDecls","decl","prop","match","property","value","replace","$0","beforeSpace","afterSpace"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,sBAAe;UACN,GADM;iBAEC,GAFD;gBAGA,GAHA;iBAIC,GAJD;gBAKA,GALA;WAML,GANK;UAON,GAPM;YAQJ,GARI;aASH,GATG;WAUL,GAVK;YAWJ,GAXI;eAYD,GAZC;cAaF,GAbE;eAcD,GAdC;cAeF,GAfE;UAgBN,GAhBM;gBAiBA,GAjBA;eAkBD,GAlBC;gBAmBA,GAnBA;eAoBD,GApBC;WAqBL,GArBK;WAsBL;CAtBV;;ACGA,YAAeA,OAAO,CAACC,MAAR,CAAe,sBAAf,EAAuCC,IAAI,IAAI;;QAEvDC,MAAM,GAAG,YAAYC,MAAM,CAACF,IAAD,CAAlB,GAA4B,IAAGA,IAAI,CAACC,MAAO,GAA3C,GAAgD,EAA/D,CAF6D;;QAKvDE,cAAc,GAAG,IAAIC,MAAJ,CAAY,IAAGH,MAAO,mBAAtB,CAAvB,CAL6D;;QAQvDI,aAAa,GAAGH,MAAM,CAACI,MAAP,CAAc,EAAd,EAAkBC,eAAlB,EAAmCL,MAAM,CAACF,IAAD,CAAN,CAAaQ,OAAhD,CAAtB,CAR6D;;QAWvDC,gBAAgB,GAAG,IAAIL,MAAJ,CAAY,WAAUF,MAAM,CAACQ,IAAP,CAAYL,aAAZ,EAA2BM,IAA3B,CAAgC,GAAhC,CAAqC,UAA3D,CAAzB;SAEOC,IAAI,IAAI;;IAEdA,IAAI,CAACC,SAAL,CAAeV,cAAf,EAA+BW,IAAI,IAAI;;+BAEjBA,IAAI,CAACC,IAAL,CAAUC,KAAV,CAAgBb,cAAhB,CAFiB;;YAE7Bc,QAF6B;;;UAKlChB,MAAJ,EAAY;QACXa,IAAI,CAACC,IAAL,GAAYE,QAAZ;OANqC;;;MAUtCH,IAAI,CAACI,KAAL,GAAaJ,IAAI,CAACI,KAAL,CAAWC,OAAX,CACZV,gBADY,EAEZ,CAACW,EAAD,EAAKC,WAAL,EAAkBH,KAAlB,EAAyBI,UAAzB,KAAyC,GAAED,WAAY,GAAEhB,aAAa,CAACa,KAAD,CAAQ,GAAEI,UAAW,EAF/E;OAAb;KAVD;GAFD;CAbc,CAAf;;;;"}